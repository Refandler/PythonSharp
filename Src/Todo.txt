
- Console Interpreter
	- Argument as files
	- print of expressions
	
+ import
+ from ... import

Refactor if/else parse implementation
elif in parser

+ doc string in module
+ doc string in def
+ doc string in class
doc string as null when undefined

TypeName for functions: function
TypeName for lists: list

Constanst: __doc__

for loop
loop variants

single inheritance in class
multiple inheritance in class

+ named parameters in parser
raise exception if named parameter precedes positional parameter
named parameters in invocation
+ parameters with default values
= *arg

global, nonlocal (sect 9.2.1 Doc 3.3)

Types
= numbers
	- complex
= strings
	- review escape, multiline
+ lists
+ dictionaries
- tuples
- files
- sets
- None
- booleans

String Type
	.split() by spaces != .split(" ")
	
Import
	cached import, import only once
	from foo import *

- support for \ at end of line
- support for open ( with multiple lines

- Multiple assignment: a, b, c = 'good', 'bad', 'ugly'
- Calls: log.write("spam, ham\n")
- Escaped charactes in strings "\n\r"
- multiple args in print: print 'The Killer', joke
= if "python" in text:
	print text
- for x in mylist:
	print x	
- while X > Y:
	print 'hello'
- while True:
	pass
- while True:
	if not line: break	
	
- elif
- else
- pass, break
- try/except/finally
- raise

+ Real number
+ Parse Real number
+ Compile real number
- Real operators
+ Boolean
- List Comprehesion
+ Parse true, false
+ Compile true, false
- Big number
- Escape characters
+ */ greater precedence +-
- + to concatenate
+ ** operator
- // operator
+ Compile list
- print command
+ Dictionary
- Hexadecimal and octals
+ Simple Assignment command
- Complex Assignment command
- backstick as repr
- input
- raw_input
- long strings
- strings with \
- strings multiline with \ before the new line
- raw string r' r"
- unicode strings
- multiline expressions with \ before the new line, 
- complex numbers with j

- thousand more...

